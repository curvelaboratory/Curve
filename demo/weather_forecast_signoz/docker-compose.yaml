include:
  - ../shared/signoz/docker-compose-minimal.yaml

services:
  weather_forecast_service:
    build:
      context: ../shared/weather_forecast_service
    environment:
      - OLTP_HOST=http://otel-collector:4317
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "18083:80"

  chatbot_ui:
    build:
      context: ../shared/chatbot_ui
    ports:
      - "18080:8080"
    environment:
      # this is only because we are running the sample app in the same docker container environemtn as curve
      - CHAT_COMPLETION_ENDPOINT=http://host.docker.internal:10000/v1
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./curve_config.yaml:/app/curve_config.yaml

  trace_streamer:
    build:
      context: ../shared/trace_streamer
    environment:
      - OTEL_TRACING_HTTP_ENDPOINT=http://otel-collector:4318/v1/traces
    volumes:
      - ~/curve_logs:/var/log/

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - ./prom_data:/prometheus
    # profiles:
      # - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    # profiles:
      # - monitoring
